version: '3'

services:
  app:
    restart: always
    build:
      context: .
      args:
        - CONFORMANCE_SUITE_BRANCH=${CONFORMANCE_SUITE_BRANCH}
    ports: 
      - 127.0.0.1:3000:3000
    container_name: docker_app
    depends_on:
      - mongo
    environment:
      - HOSTED_URL
      - MONGO_HOST
      - MONGO_DB
      - EMAIL_USER
      - EMAIL_PASSWORD
      - EMAIL_SERVER
      - ADMIN_USER
      - ADMIN_PASSWORD
      - RECAPTCHA_SITE_KEY
      - RECAPTCHA_SECRET_KEY
      - USER_SALT
      - USER_SECRET
      - ALLOW_UNSAFE_URLS
    networks:
      - public

  redis:
    image: redis
    restart: always
    container_name: redis
    volumes:
      - ./data/redis:/data
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - public

  mongo:
    restart: always
    build:
      context: mongo
    ports: 
      - 127.0.0.1:27017:27017
    container_name: docker_mongo
    environment:
      PORT: 3000
    networks:
      - public
    volumes:
      - "${DATA_PATH}:/data/db"

  nginx:
    restart: always
    build:
      context: nginx
      args:
        - HOSTNAME=${HOSTNAME}
    ports:
      - 80:80
      - 443:443
    container_name: docker_nginx
    depends_on:
      - app
    volumes:
      - ./nginx/letsencrypt:/usr/share/nginx/html
      - ./certbot/etc:/usr/share/keys
    networks:
      - public

  certbot:
    container_name: 'docker_certbot'
    image: certbot/certbot
    volumes:
      - ./keys:/var/lib/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/log:/var/log/letsencrypt
    networks:
      - public
    depends_on:
      - nginx

networks:
  public: 
    driver: bridge
